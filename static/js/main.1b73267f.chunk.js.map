{"version":3,"sources":["TodoList.js","App.js","index.js"],"names":["TodoList","props","listOfTodos","map","todo","index","react_default","a","createElement","className","concat","isChecked","key","id","onSubmit","event","changeItemBody","type","isInEditMode","value","editingText","onChange","getInputText","onBlur","exitEditing","checked","onDoubleClick","makeEditable","onClick","stopPropagation","body","deleteItem","App","state","todoItems","todoItemsToShow","inputText","activeFilterButton","all","active","completed","componentDidMount","_this","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","componentWillUnmount","removeEventListener","Object","keys","forEach","prototype","hasOwnProperty","call","localStorage","getItem","JSON","parse","setState","defineProperty","e","setItem","stringify","handleSubmit","preventDefault","newTodo","Date","now","prevState","handleChange","target","handleCheckAll","allCheckedTodos","handleItemChanged","checkedTodos","modifiedTodos","splice","indexOf","find","deleteAllItems","filter","showAllItems","showUnchecked","showChecked","itemToEdit","length","console","log","this","placeholder","style","display","some","htmlFor","src_TodoList","toConsumableArray","href","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1b73267f.chunk.js","sourcesContent":["import React from 'react';\n\nfunction TodoList(props) {\n  return (\n    props.listOfTodos.map((todo, index) => (\n      <li\n        className={`editing ${todo.isChecked ? 'completed' : ''}`}\n        key={todo.id}\n      >\n        <form onSubmit={event => props.changeItemBody(todo.id, event)}>\n          <input\n            type=\"text\"\n            className={todo.isInEditMode ? 'edit' : 'view'}\n            value={props.editingText}\n            onChange={props.getInputText}\n            onBlur={() => props.exitEditing(todo.id)}\n          />\n        </form>\n\n        <div className={todo.isInEditMode ? 'view' : ''}>\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={`todo-${index + 1}`}\n            checked={todo.isChecked}\n            onChange={() => props.onChange(todo.id)}\n          />\n\n          <label\n            onDoubleClick={() => props.makeEditable(todo.id)}\n            onClick={props.stopPropagation}\n          >\n            {todo.body}\n          </label>\n\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => props.deleteItem(todo.id)}\n          />\n        </div>\n      </li>\n    ))\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport TodoList from './TodoList';\n\nclass App extends React.Component {\n  state = {\n    todoItems: [],\n    todoItemsToShow: [],\n    inputText: '',\n    activeFilterButton: {\n      all: true,\n      active: false,\n      completed: false,\n    },\n    editingText: '',\n  }\n\n  componentDidMount = () => {\n    this.hydrateStateWithLocalStorage();\n\n    window.addEventListener(\n      'beforeunload',\n      this.saveStateToLocalStorage\n    );\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\n      'beforeunload',\n      this.saveStateToLocalStorage\n    );\n\n    this.saveStateToLocalStorage();\n  }\n\n  hydrateStateWithLocalStorage = () => {\n    Object.keys(this.state).forEach((key) => {\n      if (Object.prototype.hasOwnProperty.call(localStorage, key)) {\n        let value = localStorage.getItem(key);\n\n        try {\n          value = JSON.parse(value);\n          this.setState({ [key]: value });\n        } catch (e) {\n          this.setState({ [key]: value });\n        }\n      }\n    });\n  }\n\n  saveStateToLocalStorage = () => {\n    Object.keys(this.state).forEach((key) => {\n      localStorage.setItem(key, JSON.stringify(this.state[key]));\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (!this.state.inputText) {\n      return;\n    }\n\n    const newTodo = {\n      body: this.state.inputText,\n      id: Date.now(),\n      isChecked: false,\n      isInEditMode: false,\n    };\n\n    this.setState(prevState => ({\n      todoItems: prevState.todoItems.concat(newTodo),\n      todoItemsToShow: prevState.todoItems.concat(newTodo),\n      inputText: '',\n    }));\n  }\n\n  handleChange = (event) => {\n    this.setState({ inputText: event.target.value });\n  }\n\n  handleCheckAll = (event) => {\n    const allCheckedTodos = this.state.todoItems;\n    allCheckedTodos.forEach(todo => (todo.isChecked = event.target.checked));\n    this.setState({\n      todoItems: allCheckedTodos,\n      todoItemsToShow: allCheckedTodos,\n    });\n  }\n\n  handleItemChanged = (id) => {\n    this.setState((prevState) => {\n      const checkedTodos = prevState.todoItemsToShow.map((todo) => {\n        if (todo.id === id) {\n          todo.isChecked = !todo.isChecked;\n        }\n        return todo;\n      });\n\n      return {\n        todoItems: checkedTodos,\n        todoItemsToShow: checkedTodos,\n      };\n    });\n  }\n\n  deleteItem = (id) => {\n    this.setState((prevState) => {\n      const modifiedTodos = prevState.todoItems;\n      modifiedTodos\n        .splice(modifiedTodos\n          .indexOf(modifiedTodos\n            .find(todo => todo.id === id)), 1);\n\n      return { todoItems: modifiedTodos, todoItemsToShow: modifiedTodos };\n    });\n  }\n\n  deleteAllItems = () => {\n    this.setState((prevState) => {\n      const modifiedTodos = prevState.todoItems\n        .filter(todo => todo.isChecked === false);\n\n      return { todoItems: modifiedTodos, todoItemsToShow: modifiedTodos };\n    });\n  }\n\n  showAllItems = () => {\n    this.setState((prevState) => {\n      const selectedButton = {\n        all: true,\n        active: false,\n        completed: false,\n      };\n\n      return {\n        todoItemsToShow: prevState.todoItems,\n        activeFilterButton: selectedButton,\n      };\n    });\n  }\n\n  showUnchecked = () => {\n    this.setState((prevState) => {\n      const selectedButton = {\n        all: false,\n        active: true,\n        completed: false,\n      };\n\n      return {\n        todoItemsToShow: prevState.todoItems\n          .filter(todo => todo.isChecked === false),\n\n        activeFilterButton: selectedButton,\n      };\n    });\n  }\n\n  showChecked = () => {\n    this.setState((prevState) => {\n      const selectedButton = {\n        all: false,\n        active: false,\n        completed: true,\n      };\n\n      return {\n        todoItemsToShow: prevState.todoItems\n          .filter(todo => todo.isChecked === true),\n\n        activeFilterButton: selectedButton,\n      };\n    });\n  }\n\n  makeEditable = (id) => {\n    this.setState((prevState) => {\n      const editableItems = prevState.todoItemsToShow.map((todo) => {\n        if (todo.id === id) {\n          todo.isInEditMode = true;\n        }\n        return todo;\n      });\n      return {\n        todoItemsToShow: editableItems,\n        editingText: prevState.todoItemsToShow\n          .find(todo => todo.id === id).body,\n      };\n    });\n  }\n\n  changeItemBody = (id, event) => {\n    event.preventDefault();\n    this.setState((prevState) => {\n      const itemToEdit = prevState.todoItemsToShow.find(todo => todo.id === id);\n      if (prevState.editingText.length < 1) {\n        return this.deleteItem(id);\n      }\n      itemToEdit.body = prevState.editingText;\n      itemToEdit.isInEditMode = false;\n\n      return {\n        editingText: '',\n      };\n    });\n  }\n\n  exitEditing = (id) => {\n    this.setState((prevState) => {\n      const itemToEdit = prevState.todoItemsToShow.find(todo => todo.id === id);\n      itemToEdit.isInEditMode = false;\n\n      return {\n        editingText: '',\n      };\n    });\n  }\n\n  getInputText = (event) => {\n    this.setState({ editingText: event.target.value });\n  }\n\n  stopPropagation = (event) => {\n    event.stopPropagation();\n  }\n\n  render() {\n    console.log(this.state.todoItemsToShow.map(todo => todo.isInEditMode));\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <form onSubmit={this.handleSubmit}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleChange}\n              value={this.state.inputText}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={!(this.state.todoItems\n              .some(todo => todo.isChecked === false))}\n            onChange={this.handleCheckAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            <TodoList\n              listOfTodos={this.state.todoItemsToShow}\n              onChange={this.handleItemChanged}\n              deleteItem={this.deleteItem}\n              makeEditable={this.makeEditable}\n              changeItemBody={this.changeItemBody}\n              getInputText={this.getInputText}\n              exitEditing={this.exitEditing}\n              stopPropagation={this.stopPropagation}\n              editingText={this.state.editingText}\n            />\n          </ul>\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {`${[...this.state.todoItems]\n              .filter(todo => todo.isChecked === false).length} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className={this.state.activeFilterButton.all\n                  ? 'selected'\n                  : null}\n                onClick={this.showAllItems}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                className={this.state.activeFilterButton.active\n                  ? 'selected'\n                  : null}\n                onClick={this.showUnchecked}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                className={this.state.activeFilterButton.completed\n                  ? 'selected'\n                  : null}\n                onClick={this.showChecked}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={this.state.todoItems\n              .some(todo => todo.isChecked === true)\n              ? { display: 'block' }\n              : { display: 'none' }}\n            onClick={this.deleteAllItems}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}