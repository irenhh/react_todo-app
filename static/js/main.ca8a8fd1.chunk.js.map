{"version":3,"sources":["ListEditor.js","TodoList.js","Filter.js","localStorageHelper.js","filterMemoize.js","App.js","index.js"],"names":["ListEditor","props","todo","changeItemBody","editingText","getInputText","exitEditing","react_default","a","createElement","onSubmit","event","id","type","className","value","onChange","onBlur","autoFocus","TodoList","listOfTodos","makeEditable","deleteItem","map","index","concat","isChecked","key","isInEditMode","src_ListEditor","checked","onDoubleClick","onClick","stopPropagation","body","Filter","activeFilterButton","handleFilter","Fragment","href","hydrateStateWithLocalStorage","state","Object","keys","forEach","prototype","hasOwnProperty","call","localStorage","getItem","JSON","parse","objectSpread","defineProperty","error","saveStateToLocalStorage","setItem","stringify","visibleList","cache","arr","status","result","filter","item","filterMemoize","App","todoItems","inputText","componentDidMount","_this","setState","prevState","preparedState","window","addEventListener","componentWillUnmount","removeEventListener","handleSubmit","preventDefault","replace","length","newTodo","Date","now","handleChange","target","handleCheckAll","isTodoChecked","allCheckedTodos","toConsumableArray","handleItemChanged","deleteAllItems","find","itemToEdit","uncheckedItems","this","todoItemsToShow","placeholder","style","display","some","htmlFor","src_TodoList","src_Filter","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ca8a8fd1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ListEditor(props) {\n  const {\n    todo,\n    changeItemBody,\n    editingText,\n    getInputText,\n    exitEditing,\n  } = props;\n\n  return (\n    <form onSubmit={event => changeItemBody(todo.id, event)}>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={editingText}\n        onChange={getInputText}\n        onBlur={() => exitEditing(todo.id)}\n        autoFocus\n      />\n    </form>\n  );\n}\n\nListEditor.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n  }).isRequired,\n\n  changeItemBody: PropTypes.func.isRequired,\n  editingText: PropTypes.string.isRequired,\n  getInputText: PropTypes.func.isRequired,\n  exitEditing: PropTypes.func.isRequired,\n};\n\nexport default ListEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ListEditor from './ListEditor';\n\nfunction TodoList(props) {\n  const {\n    listOfTodos,\n    changeItemBody,\n    editingText,\n    getInputText,\n    exitEditing,\n    onChange,\n    makeEditable,\n    deleteItem,\n  } = props;\n\n  return (\n    listOfTodos.map((todo, index) => (\n      <li\n        className={`editing ${todo.isChecked ? 'completed' : ''}`}\n        key={todo.id}\n      >\n        {todo.isInEditMode && (\n          <ListEditor\n            todo={todo}\n            changeItemBody={changeItemBody}\n            editingText={editingText}\n            getInputText={getInputText}\n            exitEditing={exitEditing}\n          />\n        )}\n\n        <div className={todo.isInEditMode ? 'view' : ''}>\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={`todo-${index + 1}`}\n            checked={todo.isChecked}\n            onChange={() => onChange(todo.id)}\n          />\n\n          <span\n            onDoubleClick={() => makeEditable(todo.id)}\n            onClick={event => event.stopPropagation()}\n          >\n            {todo.body}\n          </span>\n\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => deleteItem(todo.id)}\n          />\n        </div>\n      </li>\n    ))\n  );\n}\n\nTodoList.propTypes = {\n  listOfTodos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeItemBody: PropTypes.func.isRequired,\n  editingText: PropTypes.string.isRequired,\n  getInputText: PropTypes.func.isRequired,\n  exitEditing: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  makeEditable: PropTypes.func.isRequired,\n  deleteItem: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Filter(props) {\n  const {\n    activeFilterButton,\n    handleFilter,\n  } = props;\n\n  return (\n    <>\n      <li>\n        <a\n          href=\"#/\"\n          className={activeFilterButton === 'all'\n            ? 'selected'\n            : ''}\n          onClick={() => handleFilter('all')}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={activeFilterButton === 'active'\n            ? 'selected'\n            : ''}\n          onClick={() => handleFilter('active')}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={activeFilterButton === 'completed'\n            ? 'selected'\n            : ''}\n          onClick={() => handleFilter('completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  activeFilterButton: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","export const hydrateStateWithLocalStorage = (state) => {\n  Object.keys(state).forEach((key) => {\n    if (Object.prototype.hasOwnProperty.call(localStorage, key)) {\n      let value = localStorage.getItem(key);\n\n      try {\n        value = JSON.parse(value);\n        state = {\n          ...state,\n          [key]: value,\n        };\n      } catch (error) {\n        state = {\n          ...state,\n          [key]: value,\n        };\n      }\n    }\n  });\n\n  return state;\n};\n\nexport const saveStateToLocalStorage = (state) => {\n  Object.keys(state).forEach((key) => {\n    localStorage.setItem(key, JSON.stringify(state[key]));\n  });\n};\n","const filterMemoize = () => {\n  let cache = {};\n\n  return (arr, status) => {\n    if (cache.arr === arr && cache.status === status) {\n      return cache.result;\n    }\n\n    let result;\n\n    switch (status) {\n      default:\n      case 'all': result = arr; break;\n      case 'active': result = arr.filter(item => !item.isChecked); break;\n      case 'completed': result = arr.filter(item => item.isChecked);\n    }\n\n    cache = {\n      arr,\n      status,\n      result,\n    };\n\n    return result;\n  };\n}\n\nexport const visibleList = filterMemoize();\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Filter from './Filter';\nimport { hydrateStateWithLocalStorage, saveStateToLocalStorage } from './localStorageHelper';\nimport { visibleList } from './filterMemoize';\n\nclass App extends React.Component {\n  state = {\n    todoItems: [],\n    inputText: '',\n    activeFilterButton: 'all',\n    editingText: '',\n  }\n\n  componentDidMount = () => {\n    this.setState((prevState) => {\n      const preparedState = hydrateStateWithLocalStorage(prevState);\n\n      return {\n        ...prevState,\n        ...preparedState,\n      };\n    });\n\n    window.addEventListener(\n      'beforeunload',\n      () => saveStateToLocalStorage(this.state)\n    );\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\n      'beforeunload',\n      () => saveStateToLocalStorage(this.state)\n    );\n\n    saveStateToLocalStorage(this.state);\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.inputText.replace(/\\s/g, '').length < 1) {\n      return;\n    }\n\n    const newTodo = {\n      body: this.state.inputText,\n      id: Date.now(),\n      isChecked: false,\n      isInEditMode: false,\n    };\n\n    this.setState(prevState => ({\n      todoItems: prevState.todoItems.concat(newTodo),\n      inputText: '',\n    }));\n  }\n\n  handleChange = (event) => {\n    this.setState({ inputText: event.target.value });\n  }\n\n  handleCheckAll = (event) => {\n    const isTodoChecked = event.target.checked;\n\n    this.setState((prevState) => {\n      const allCheckedTodos = [...prevState.todoItems];\n      allCheckedTodos.forEach(todo => (todo.isChecked = isTodoChecked));\n\n      return {\n        todoItems: allCheckedTodos,\n      };\n    });\n  }\n\n  handleItemChanged = (id) => {\n    this.setState((prevState) => {\n      const checkedTodos = prevState.todoItems.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          isChecked: !todo.isChecked,\n        };\n      });\n\n      return {\n        todoItems: checkedTodos,\n      };\n    });\n  }\n\n  deleteItem = (id) => {\n    this.setState((prevState) => {\n      const modifiedTodos = prevState.todoItems.filter(todo => todo.id !== id);\n\n      return { todoItems: modifiedTodos };\n    });\n  }\n\n  deleteAllItems = () => {\n    this.setState((prevState) => {\n      const modifiedTodos = prevState.todoItems\n        .filter(todo => !todo.isChecked);\n\n      return { todoItems: modifiedTodos };\n    });\n  }\n\n  makeEditable = (id) => {\n    this.setState((prevState) => {\n      const editableItems = prevState.todoItems.map((todo) => {\n        if (todo.id === id) {\n          todo.isInEditMode = true;\n        }\n\n        return todo;\n      });\n\n      const editingText = prevState.todoItems\n        .find(todo => todo.id === id).body;\n\n      return {\n        todoItems: editableItems,\n        editingText,\n      };\n    });\n  }\n\n  changeItemBody = (id, event) => {\n    event.preventDefault();\n    this.setState((prevState) => {\n      const itemToEdit = prevState.todoItems.find(todo => todo.id === id);\n\n      if (prevState.editingText.length < 1) {\n        return this.deleteItem(id);\n      }\n\n      itemToEdit.body = prevState.editingText;\n      itemToEdit.isInEditMode = false;\n\n      return {\n        editingText: '',\n      };\n    });\n  }\n\n  exitEditing = (id) => {\n    this.setState((prevState) => {\n      const itemToEdit = prevState.todoItems.find(todo => todo.id === id);\n      itemToEdit.isInEditMode = false;\n\n      return {\n        editingText: '',\n      };\n    });\n  }\n\n  getInputText = (event) => {\n    this.setState({ editingText: event.target.value });\n  }\n\n  handleFilter = (status) => {\n    this.setState({ activeFilterButton: status });\n  }\n\n  render() {\n    const uncheckedItems = [...this.state.todoItems]\n      .filter(todo => !todo.isChecked).length;\n\n    const todoItemsToShow = visibleList(this.state.todoItems, this.state.activeFilterButton);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <form onSubmit={this.handleSubmit}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              onChange={this.handleChange}\n              value={this.state.inputText}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={!(this.state.todoItems\n              .some(todo => !todo.isChecked))}\n            onChange={this.handleCheckAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            <TodoList\n              listOfTodos={todoItemsToShow}\n              onChange={this.handleItemChanged}\n              deleteItem={this.deleteItem}\n              makeEditable={this.makeEditable}\n              changeItemBody={this.changeItemBody}\n              getInputText={this.getInputText}\n              exitEditing={this.exitEditing}\n              editingText={this.state.editingText}\n            />\n          </ul>\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {`${uncheckedItems} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <Filter\n              activeFilterButton={this.state.activeFilterButton}\n              handleFilter={this.handleFilter}\n            />\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={this.state.todoItems\n              .some(todo => todo.isChecked === true)\n              ? { display: 'block' }\n              : { display: 'none' }}\n            onClick={this.deleteAllItems}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}